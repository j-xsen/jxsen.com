/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 jaxsenvillesign.glb --transform 
Files: jaxsenvillesign.glb [495.69KB] > Z:\art\models\jaxsenvillesign\jaxsenvillesign-transformed.glb [35.21KB] (93%)
*/

import {useRef, useState} from 'react'
import {useGLTF} from '@react-three/drei'
import {ObjectMap, useFrame} from '@react-three/fiber'
import {GLTF} from "three-stdlib";
import {Mesh, MeshPhysicalMaterial, MeshStandardMaterial, Vector3} from "three";
import Transformation from "../types/Transformation";
import WordMesh from "../WordMesh";
import FontHolder from "../types/FontHolder";

type GLTFResult = GLTF & ObjectMap & {
    nodes: {
        Cube: Mesh
        Cube_1: Mesh
        Cube001: Mesh
        Cube001_1: Mesh
        roof: Mesh
        Cube004: Mesh
        Cube004_1: Mesh
    }
    materials: {
        PaletteMaterial001: MeshStandardMaterial
        PaletteMaterial002: MeshStandardMaterial
        PaletteMaterial003: MeshPhysicalMaterial
        PaletteMaterial004: MeshStandardMaterial
        PaletteMaterial005: MeshStandardMaterial
    }
}

export function JaxsenvilleSign(props: Transformation & FontHolder) {
    const {nodes, materials} = useGLTF('/models/jaxsenvillesign-transformed.glb') as GLTFResult
    const mesh = useRef<Mesh>(null!)
    const [rotatingLeft, setRotatingLeft] = useState(true)
    const [hovered, setHovered] = useState(false)
    const speed = 0.0055
    const maxRotation = 0.4
    const defaultScale = 0.65
    const hoveredScale = 0.7

    useFrame(() => {
        if (rotatingLeft) {
            mesh.current.rotation.y -= speed
            if (mesh.current.rotation.y <= -maxRotation) {
                setRotatingLeft(false)
            }
        } else {
            mesh.current.rotation.y += speed
            if (mesh.current.rotation.y >= maxRotation) {
                setRotatingLeft(true)
            }
        }
        // mesh.current.rotation.y
    })

    return (<>
        <group {...props} dispose={null} ref={mesh} scale={hovered ? hoveredScale : defaultScale}
               onPointerOver={(event) => setHovered(true)}
               onPointerOut={(event) => setHovered(false)}
               onClick={() => window.open("https://jaxsenville.com/", "_blank")}>
            <mesh geometry={nodes.roof.geometry} material={materials.PaletteMaterial003}/>
            <mesh geometry={nodes.Cube.geometry} material={materials.PaletteMaterial001}/>
            <mesh geometry={nodes.Cube_1.geometry} material={materials.PaletteMaterial002}/>
            <mesh geometry={nodes.Cube001.geometry} material={materials.PaletteMaterial001}/>
            <mesh geometry={nodes.Cube001_1.geometry} material={materials.PaletteMaterial002}/>
            <mesh geometry={nodes.Cube004.geometry} material={materials.PaletteMaterial004}/>
            <mesh geometry={nodes.Cube004_1.geometry} material={materials.PaletteMaterial005}/>
        </group>
    {hovered && <WordMesh center={new Vector3(0, -11, 6)}
                          font={props.font}
                          word="Jaxsenville.com"/>}</>
    )
}

useGLTF.preload('/models/jaxsenvillesign-transformed.glb')
