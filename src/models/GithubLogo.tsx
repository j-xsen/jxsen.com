/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 githublogo.glb --transform 
Files: githublogo.glb [20.01KB] > Z:\art\models\githublogo\githublogo-transformed.glb [2.41KB] (88%)
*/

import {useRef, useState} from 'react'
import {useGLTF} from '@react-three/drei'
import {ObjectMap, useFrame} from '@react-three/fiber'
import {GLTF} from "three-stdlib";
import {Mesh, MeshStandardMaterial, Vector3} from "three";
import {Position} from "../types/Transformation";
import WordMesh from "../WordMesh";
import FontHolder from "../types/FontHolder";

type GLTFResult = GLTF & ObjectMap & {
    nodes: {
        GithubLogo: Mesh
    }
    materials: {
        ['Material.001']: MeshStandardMaterial
    }
}

export function GithubLogo(props: Position & FontHolder) {
    const mesh = useRef<Mesh>(null!)
    const [hovered, setHovered] = useState(false)
    const {nodes, materials} = useGLTF('/models/githublogo-transformed.glb') as GLTFResult

    const defaultScale = 0.75
    const hoveredScale = 0.8

    useFrame(() => {
        mesh.current.rotation.y += 0.015
    })

    return (<>
        <group dispose={null} position={props.position} scale={hovered ? hoveredScale : defaultScale} ref={mesh}
               onPointerOver={(event) => setHovered(true)}
               onPointerOut={(event) => setHovered(false)}
               onClick={() => window.open("https://github.com/j-xsen", "_blank")}>
            <mesh geometry={nodes.GithubLogo.geometry}>
                <meshBasicMaterial color={hovered ? [.5, .5, .5] : [1, 1, 1]}/>
            </mesh>
            <mesh>
                <boxGeometry args={[5, 5, 1]}/>
                <meshBasicMaterial visible={false}/>
            </mesh>
        </group>
    {hovered && <WordMesh center={new Vector3(0, -11, 6)}
                          font={props.font}
                          word="G,it,Hub/j-xsen"/>}</>
    )
}

useGLTF.preload('/models/githublogo-transformed.glb')
